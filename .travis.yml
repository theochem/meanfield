env:
  matrix:
  - MYCONDAPY=3.6
  - MYCONDAPY=3.7
  global:
    # ANACONDA_TOKEN
    - secure: "g9xk0WspwgLOgQUqe07a0G0d94R8/+ZRwbv6DPq6Yv8FRiVczHQkzOZa6gaVXg5/760t+a2ENrHCvQx6Fa1a9eEbsZENHM8RvK+Gsk8JhKSSd3Q99IeFgJMP94+YKlVnIAlzkOZbCNvKqTkosKY6nRunifBOYed2worBlVv4uydWlw35pNGXkZfYcrGeM7hWXzDjNynt9MAk4zR48ZciEk0aSz/9nJK+lQZO40Kr9O1TEtZG/TaPBHKiO+NqVyZinJ6Vi/w1Kjq1ssg/XDX9qyNi/K5ivi9pO6BnuWzWnkC9oNR+f2fSzeS8iXqWlPgK9cpOvlTGAPTmqg09dRulPuXikfLkRiC4c56gdZ23qf0qo/IUqDNuYdGq7u96sIVM/s5lxPdy2f04olyUmn0CDNkM4XlUddNi7P1mjIHoCbmZ9kyfGM9HzDw5YciN/ZBZ+ZqIzLOmnVa+8kLY0moepL+l/kWXXxFX5jXKgc2Bwo1jJsit1Dt7m7RK/F5hz0viMWwF9lNyfanPYkx435dkNLMCKvnlAIE9Ej7dT3+CPpT2Ls3qAzorX70yR1b+0fTi8yVSjtqjkoYMDZKjlY5OCry6Y0DL4X/cjrvWc/bgPJUHNtSmfmncDhXYwxnfAjQIh0cVe1UW1g9XV+RGUUv/CYPjxpCriTpax4J8e7Y358M=" 
    # GITHUB_TOKEN
    - secure: "Qpg994qdR9B8MR0F/EZ+jvJX3pg5hI9fHpkroe3rCE8zjD6BBNBwjZl4UwvULn+OOwPwBTD+m0Zj0QhFswkF+ER5Jhs66bIfhJCeaf2ZdAMI7tty8OA+myG2yfLWt6w0FZoCJTwLN8wS92cKs0m3F2eoKTsygDc80xWq50B6ALzg6abHSn4b+tAtszPaQehAJmioiBtGzKivwn7GRdNBTR6tR620CQGhFZ/D+fluljlOeCQ4cCNMi0U5lC1R1eSoHVjOMlWsRqkVTE0oe/FB/eYHi0K/tk5VFuI1hKJnbI6d8sLsl51WnsbYB+m9gHPuf8ESu569MmA8+OG78tKajp3Q6k86yXd/fxC7jWOucKHU1H0xuOebYNh08h9UXNSyauY8Xack++Bf/EW6yp54nyxq3QgbvbQjZ0Qi9kOj66IttpAlrI85byPYb1HWGdI5VQdQ5UNwYNJEYkyLkNB1LTXUSl3sGT5AcWgvzijbmNY7q86B97vD6mpN2T04w80T+4bqkdOdE4PitQVR58Lc9KprinKYSRrZ1gEBrjunoswuXHfnwasWYBWYkNq9eKcXt9W5PdHzowcfy97rnm5kcsOZCcviltpm8yhahrpMUW9ITzhObcK0j1X9XHCKVK1OmZc35+E6Rrp9xHzsE3LLN5TLtMLMTNraj/AS5fnn83w="
    - PROJECT_NAME=meanfield
    - GITHUB_REPO_NAME=theochem/meanfield
    - CONDA_PKG_NAME_PY=meanfield

# TEMPLATED FROM https://raw.githubusercontent.com/theochem/python-cython-ci-example/master/.travis.yml 
####
# EVERYTHING BELOW THIS LINE IS AUTOGENERATED.
####
# v1.0

# Do not use Travis Python to save some time.
language: generic
os:
  - linux
  - osx
dist: trusty
sudo: false

matrix:
  # We only test on Linux with one specific Python version, unless we make a release. All
  # other cases are allowed to fail and will exit early. With the fast_finish option,
  # travis will send a status update to github as soon as the non-allowed-to-fail has
  # finished. This speeds up testing in PRs.
  #
  # This is not ideal. It would be better to run just one item from the build matrix when
  # not preparing a release. This is not possible on Travis. There are several tickets on
  # travis-ci related to this limitation.
  #
  #    https://github.com/travis-ci/travis-ci/issues/7451
  #    https://github.com/travis-ci/travis-ci/issues/7149
  #    https://github.com/travis-ci/travis-ci/issues/2778
  #    ...
  fast_finish: true
  allow_failures:
  - os: osx


cache:
  directories:
    - $HOME/download # Sufficient to add miniconda.sh to TRAVIS cache.
    - $HOME/miniconda # Add the installation to TRAVIS cache.

before_cache:
- if ! [[ $TRAVIS_TAG ]]; then rm -rf $HOME/miniconda/conda-bld; fi
- rm -rf $HOME/miniconda/locks $HOME/miniconda/pkgs $HOME/miniconda/var $HOME/miniconda/conda-meta/history
- pip uninstall -y cardboardlint # Cardboardlint always installs even if no changes are made.

branches:
  only:
    - master
    - /^[0-9]+\.[0-9]+(\.[0-9]+)?([ab][0-9]+)?$/

before_install:
- if ! [[ $TRAVIS_TAG || $TRAVIS_OS_NAME == "linux" && $MYCONDAPY == "3.6" ]]; then exit 0; fi
# Get miniconda. Take the right version, so re-installing python is hopefully not needed.
- if test -e $HOME/miniconda/bin; then
    echo "miniconda already installed.";
  else
    echo "Installing miniconda.";
    rm -rf $HOME/miniconda;
    mkdir -p $HOME/download;
    if [[ -d $HOME/download/miniconda.sh ]]; then rm -rf $HOME/download/miniconda.sh; fi;
    if [ "${MYCONDAPY}" = "2.7" ]; then
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
      fi;
    else
      if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
      else
        wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
      fi;
    fi;
    bash $HOME/download/miniconda.sh -b -p $HOME/miniconda;
  fi


install:
- source $HOME/miniconda/bin/activate
- hash -r
# Configure conda and get a few essentials
- conda config --set always_yes yes
- conda config --add channels theochem
- conda install -q conda conda-build conda-verify

# Set the version info from the git tag
- git fetch origin --tags &&
  export PROJECT_VERSION=$(python tools/gitversion.py) &&
  python tools/gitversion.py python > ${PROJECT_NAME}/version.py;

# Get a list of all build and runtime dependencies.
# This should become easier, without the copy to conda.recipe.ugly.
- conda render -f tools/conda.recipe/rendered.yaml tools/conda.recipe
- CONDA_DEPENDENCIES=$(python -c "from yaml import load;
    req1 = load(open('tools/conda.recipe/rendered.yaml'))['requirements'];
    deps = req1['build'] + req1['run'] + req1['host'];
    print(' '.join(set(dep.split()[0] for dep in deps)))")

# Get the right python version for building. This only does something for 3.5.
# Install extra package needed to make things work. Most things can be listed as
# dependencies on meta.yaml and setup.py, unless setup.py already imports them.
# Install conda tools for packaging and uploading
- conda install -q python=${MYCONDAPY} anaconda-client numpy setuptools cython
- if ! [[ $TRAVIS_TAG ]]; then
    conda install -q ${CONDA_DEPENDENCIES};
    pip install --upgrade pylint codecov coverage pycodestyle pydocstyle;
  fi
# Show conda info for debugging
- conda info -a

# Install the latest cardboardlinter
- if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
    pip install --upgrade git+https://github.com/theochem/cardboardlint.git@master#egg=cardboardlint;
  fi

script:
# Static linting
# --------------
- if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
    cardboardlinter --refspec $TRAVIS_BRANCH -f static;
  fi

# Unit tests and dynamic linting
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- if [[ $TRAVIS_TAG ]]; then
    conda build -q tools/conda.recipe;
  else
    python setup.py build_ext -i --define CYTHON_TRACE_NOGIL &&
    nosetests ${PROJECT_NAME}
         -v --detailed-errors --with-coverage --cover-package=${PROJECT_NAME}
         --cover-tests --cover-inclusive --cover-branches &&
    coverage xml -i &&

    if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
       cardboardlinter --refspec $TRAVIS_BRANCH -f 'dynamic';
    fi
  fi

# Make CPP and PY source package for github deployment
- if [[ $TRAVIS_TAG ]]; then
    python setup.py sdist;
  fi

# Some other stuff
# ----------------

# Compile documentation
- if [[ -e doc ]]; then
    (cd doc; make html);
  fi

after_success:
# Upload the coverage analysis
- codecov -f coverage.xml

before_deploy:
# Try to set some env vars to configure deployment.
# Please keep the following lines. They will be used again as soon as it is supported on
# travis. See https://github.com/travis-ci/dpl/issues/613
#- export IS_PRERELEASE=$(python -c 'import os; tt=os.environ["TRAVIS_TAG"]; print("true" if ("a" in tt or "b" in tt) else "false")')
#- echo ${IS_PRERELEASE}
- export ANACONDA_LABEL=$(python -c 'import os; tt=os.environ["TRAVIS_TAG"]; print("dev" if ("a" in tt) else ("test" if "b" in tt else "main"))')
- echo ${ANACONDA_LABEL}

# In deployment, the env var TRAVIS_TAG contains the name of the current version, if any.
deploy:
- provider: releases
  skip_cleanup: true
  api_key: ${GITHUB_TOKEN}
  file: dist/${PROJECT_NAME}-${TRAVIS_TAG}.tar.gz
  on:
    repo: ${GITHUB_REPO_NAME}
    tags: true
    condition: "$MYCONDAPY == 3.6 && $TRAVIS_OS_NAME == linux && $TRAVIS_TAG == *[ab]*"
  prerelease: true

- provider: releases
  skip_cleanup: true
  api_key: ${GITHUB_TOKEN}
  file: dist/${PROJECT_NAME}-${TRAVIS_TAG}.tar.gz
  on:
    repo: ${GITHUB_REPO_NAME}
    tags: true
    condition: "$MYCONDAPY == 3.6 && $TRAVIS_OS_NAME == linux && $TRAVIS_TAG != *[ab]*"
  prerelease: false

- provider: script
  skip_cleanup: true
  script: anaconda -t $ANACONDA_TOKEN upload --force -l ${ANACONDA_LABEL} ${HOME}/miniconda/conda-bld/*/${PROJECT_NAME}-*.tar.bz2
  on:
    repo: ${GITHUB_REPO_NAME}
    tags: true

#- provider: pypi
#  skip_cleanup: true
#  user: ${PYPI_LOGIN}
#  password: ${PYPI_PASSWD}
#  on:
#    repo: ${GITHUB_REPO_NAME}
#    tags: true
#    condition: "$TRAVIS_TAG != *[ab]* && $MYCONDAPY == 3.6 && $TRAVIS_OS_NAME == linux"

- provider: pages
  skip_cleanup: true
  github_token: ${GITHUB_TOKEN}
  project_name: ${PROJECT_NAME}
  local_dir: doc/_build/html
  on:
    repo: ${GITHUB_REPO_NAME}
    condition: "-e doc && $TRAVIS_TAG != *[ab]* && $MYCONDAPY == 3.6 && $TRAVIS_OS_NAME == linux"
    tags: true
